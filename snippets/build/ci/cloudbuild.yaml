#FLOW
#Dev pushes terraform to real env branch (dev or prod) cloud build triggers manifest and builds state
#Dev pushes terraform to local feature branch  cloud build runs terraform plan but nothing applied - used to discuss changes
steps:
- name: 'gcr.io/cloud-builders/docker'
  args:
  #Look below at substitutions for vars
    [ 'build', '-t', 'europe-west4-docker.pkg.dev/$PROJECT_ID/snippets/snippets-image:${_IMAGE_VERSION}', '.' ]
  #this sets the workdir for the build step
  #use this if dockerfile is in subdir from root
  dir: 'snippets'
  #DEBUG: PRINT OUT ENV VARS
- name: 'ubuntu'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      ls
  # deploy container image to GKE
  # Configure a kubectl workspace for this project
  # Step 2 use terraform to build GCP env inclu GKE clusters
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      echo "***********************"
      echo "$BRANCH_NAME"
      echo "***********************"
  ## [START tf-init]
- id: 'tf init'
  name: 'hashicorp/terraform:0.12.9'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      cd build/ci/environments/$BRANCH_NAME
      terraform init
  ## [END tf-init]

  # [START tf-plan]
- id: 'tf plan'
  name: 'hashicorp/terraform:0.12.9'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      cd build/ci/environments/$BRANCH_NAME
      terraform plan
  ## [END tf-plan]

  ## [START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:0.12.9'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      cd build/ci/environments/$BRANCH_NAME
      terraform apply -auto-approve
  timeout: 2000s
## [END tf-apply]
#
##############################
## DANGER ZONE
##############################
# Comment all the steps, and uncomment this one if you wan to delete all the resources created in your project.
## [START tf destroy]
#- id: 'tf destroy'
#  name: 'hashicorp/terraform:0.12.9'
#  entrypoint: 'sh'
#  args:
#  - '-c'
#  - |
#      echo "***********************"
#      echo "$BRANCH_NAME" Destroy
#      echo "***********************"
#      cd environments/$BRANCH_NAME
#      terraform init
#      terraform destroy -auto-approve
## [END sh-config]
substitutions:
  _IMAGE_VERSION: v4 # default value
  _CLOUDSDK_COMPUTE_ZONE: europe-west4
  _CLOUDSDK_CONTAINER_CLUSTER:
images:
  - 'europe-west4-docker.pkg.dev/$PROJECT_ID/snippets/snippets-image:${_IMAGE_VERSION}'


